#include<stdio.h>
#include<stdlib.h>
 
struct stack{
    int size ;
    int top;
    int *arr;
};
 
int isFull(struct stack *ptr){
    if(ptr->top == ptr->size-1){
        return 1;
    }
    else{
        return 0;
    }
}
 
void push(struct stack* ptr, int val){
    if(isFull(ptr)){
        printf("Stack Overflow! Cannot push %d to the stack\n", val);
    }
    else{
        ptr->top++;
        ptr->arr[ptr->top] = val;
    }
}

void printStack(struct stack* ptr) {
        printf("Stack elements are: ");
        int i = 0;
        while(i<=ptr->top){
            printf("%d ",ptr->arr[i]);
            i++;
        }
        printf("\n");
}
int stack_top(struct stack *sp){
    return sp->arr[sp->top];
}
int stack_bottom(struct stack *sp){
    return sp->arr[0];
}
int main(){
    struct stack *sp = (struct stack *) malloc(sizeof(struct stack));
    sp->size = 50;
    sp->top = -1;
    sp->arr = (int *) malloc(sp->size * sizeof(int));
    push(sp, 10);
    push(sp, 20);
    push(sp, 30);
    push(sp, 40);
    push(sp, 50);
    push(sp, 60);
    push(sp, 70);
    printStack(sp);
   
    
    printf("The top  value  of  the stack is:%d\n",stack_top(sp));
    printf("The bottom value of the stack is:%d\n",stack_bottom(sp));
    return 0;
}
